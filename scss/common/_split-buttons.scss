//
// @mixins
//

// We use this mixin to create split buttons that build upon the button mixins
//
// $padding - Type of padding to apply. Default: medium. Options: tiny, small, medium, large.
// $pip-color - Color of the triangle. Default: $split-button-pip-color.
// $span-border - Border color of button divider. Default: $primary-color.
// $base-style - Apply base style to split button. Default: true.
@mixin split-button($padding:medium,$pip-color:$split-button-pip-color,$span-border:$primary-color,$base-style:true) {

    // With this, we can control whether or not the base styles come through.
    @if $base-style {
        position: relative;

        // Styling for the split arrow clickable area
        span {
            display: block;
            height: 100%;
            position: absolute;
            #{$default-opposite}: 0;
            top: 0;
            border-#{$default-float}: solid 1px;

            // Building the triangle pip indicator
            &:after {
                position: absolute;
                content: "";
                width: 0;
                height: 0;
                display: block;
                border-style: inset;
                top: 50%;

                #{$default-float}: 50%;
            }

            &:active { background-color: $split-button-active-bg-tint; }
        }
    }

    // Control the border color for the span area of the split button
    @if $span-border {
        span {
            border-#{$default-float}-color: rgba(255,255,255,0.5);
        }
    }

    // Style of the button and clickable area for tiny sizes
    @if $padding == tiny {
        padding-#{$default-opposite}: $split-button-padding-tny;

        span { width: $split-button-span-width-tny;
            &:after {
                border-top-style: solid;
                border-width: $split-button-pip-size-tny;
                top: 46%;
                margin-#{$default-float}: $split-button-pip-default-float-tny;
            }
        }
    }

    // Style of the button and clickable area for small sizes
    @else if $padding == small {
        padding-#{$default-opposite}: $split-button-padding-sml;

        span { width: $split-button-span-width-sml;
            &:after {
                border-top-style: solid;
                border-width: $split-button-pip-size-sml;
                top: 48%;
                margin-#{$default-float}: $split-button-pip-default-float-sml;
            }
        }
    }

    // Style of the button and clickable area for default (medium) sizes
    @else if $padding == medium {
        padding-#{$default-opposite}: $split-button-padding-med;

        span { width: $split-button-span-width-med;
            &:after {
                border-top-style: solid;
                border-width: $split-button-pip-size-med;
                top: 44%;
                margin-#{$default-float}: $split-button-pip-default-float-med;
            }
        }
    }

    // Style of the button and clickable area for large sizes
    @else if $padding == large {
        padding-#{$default-opposite}: $split-button-padding-lrg;

        span { width: $split-button-span-width-lrg;
            &:after {
                border-top-style: solid;
                border-width: $split-button-pip-size-lrg;
                top: 48%;
                margin-#{$default-float}: $split-button-pip-default-float-lrg;
            }
        }
    }

    // Control the color of the triangle pip
    @if $pip-color {
        span:after { border-color: $pip-color transparent transparent transparent; }
    }
}

@include exports("split-button") {
    .split.button { @include split-button;

        &.secondary { @include split-button(false, $split-button-pip-color, $secondary-color, false); }
        &.alert { @include split-button(false, false, $alert-color, false); }
        &.success { @include split-button(false, false, $success-color, false); }

        &.tiny { @include split-button(tiny, false, false, false); }
        &.small { @include split-button(small, false, false, false); }
        &.large { @include split-button(large, false, false, false); }
        &.expand { padding-left: 2rem; }

        &.secondary { @include split-button(false, $split-button-pip-color-alt, false, false); }

        &.radius span { @include side-radius($default-opposite, $global-radius); }
        &.round span { @include side-radius($default-opposite, 1000px); }
    }
}