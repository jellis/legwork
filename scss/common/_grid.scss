@import "settings";
@import "mixins/grid";

/* The grid */
@include exports("grid") {
    .row {
        @include grid-row();
        &.collapse {
            > .column, > .columns { @include grid-column($collapse:true, $float:false); }
            .row { margin-left: 0; margin-right: 0; }
        }

        .row { @include grid-row($behavior:nest);
            &.collapse { @include grid-row($behavior:nest-collapse); }
        }
    }

    .column, .columns { @include grid-column($columns:$total-columns, $position:true); }

    // Floats the last child to the right so no alignment issues on rounding
    [class*="column"] + [class*="column"]:last-child { float: $default-opposite; }
    // Prevents the .end classed unfinished rows from floating last child
    [class*="column"] + [class*="column"].end { float: $default-float; }

    @media #{$small-up} {
        // Will control all if nothing else overrides
        @include grid-html-classes($size:small);
    }

    @media #{$medium-up} {
        @include grid-html-classes($size:medium);

        @for $i from 0 through $total-columns - 1 {
            .push-#{$i} {
                @include grid-column($push:$i, $collapse:null, $float:false);
            }
            .pull-#{$i} {
                @include grid-column($pull:$i, $collapse:null, $float:false);
            }
        }
    }

    @media #{$large-up} {
        @include grid-html-classes($size:large);
        @for $i from 0 through $total-columns - 1 {
            .push-#{$i} {
                @include grid-column($push:$i, $collapse:null, $float:false);
            }
            .pull-#{$i} {
                @include grid-column($pull:$i, $collapse:null, $float:false);
            }
        }
    }
}